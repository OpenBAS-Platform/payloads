{
  "export_version": 1,
  "native_collection": true,
  "payload_information": {
    "payload_type": "Command",
    "payload_name": "Process Discovery - ps",
    "payload_description": "Utilize ps to identify processes.",
    "payload_platforms": [
      "Linux",
      "MacOS"
    ],
    "payload_attack_patterns": [
      {
        "attack_pattern_id": "6282476a-f47e-4c81-821f-471a413f78c0",
        "attack_pattern_name": "Process Discovery",
        "attack_pattern_description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
        "attack_pattern_external_id": "T1057",
        "attack_pattern_kill_chain_phases": null
      }
    ],
    "payload_cleanup_executor": null,
    "payload_cleanup_command": null,
    "payload_elevation_required": false,
    "payload_arguments": [],
    "payload_prerequisites": [],
    "payload_external_id": "4cd2c65a-8b86-4ff5-9c0d-dc1d39de76a7",
    "payload_source": "FILIGRAN",
    "payload_expectations": [],
    "payload_status": "VERIFIED",
    "payload_execution_arch": "ALL_ARCHITECTURES",
    "payload_detection_remediations": [],
    "payload_tags": [],
    "payload_output_parsers": [
      {
        "output_parser_id": "db6d88e1-5e87-414e-954c-466423bfa86d",
        "output_parser_mode": "STDOUT",
        "output_parser_type": "REGEX",
        "output_parser_contract_output_elements": [
          {
            "contract_output_element_id": "ad49220c-2cfe-4093-9372-eeb2215243c5",
            "contract_output_element_is_finding": true,
            "contract_output_element_rule": "^\\S+\\s+(\\d+)",
            "contract_output_element_name": "PID",
            "contract_output_element_regex_groups": [
              {
                "regex_group_id": "1f368c20-97bf-4d26-95af-f923851dd7f8",
                "regex_group_field": "number",
                "regex_group_index_values": "$1",
                "regex_group_created_at": "2025-07-30T05:56:56.205819Z",
                "regex_group_updated_at": "2025-07-30T05:56:56.205819Z"
              }
            ],
            "contract_output_element_key": "pid",
            "contract_output_element_type": "number",
            "contract_output_element_tags": [],
            "contract_output_element_created_at": "2025-07-30T05:56:56Z",
            "contract_output_element_updated_at": "2025-07-30T05:56:56Z"
          },
          {
            "contract_output_element_id": "eea65ac8-4f67-4b18-b720-5435e80cbfb7",
            "contract_output_element_is_finding": true,
            "contract_output_element_rule": "^(\\S+)",
            "contract_output_element_name": "User",
            "contract_output_element_regex_groups": [
              {
                "regex_group_id": "afdfc00a-9fca-4036-8d6d-844498d576b6",
                "regex_group_field": "text",
                "regex_group_index_values": "$1",
                "regex_group_created_at": "2025-07-30T05:56:56.205819Z",
                "regex_group_updated_at": "2025-07-30T05:56:56.205819Z"
              }
            ],
            "contract_output_element_key": "user",
            "contract_output_element_type": "text",
            "contract_output_element_tags": [],
            "contract_output_element_created_at": "2025-07-30T05:56:56Z",
            "contract_output_element_updated_at": "2025-07-30T05:56:56Z"
          },
          {
            "contract_output_element_id": "ba612fc1-0b78-4d10-8c69-f417bde81076",
            "contract_output_element_is_finding": true,
            "contract_output_element_rule": "^\\S+\\s+\\d+\\s+[\\d\\.]+\\s+[\\d\\.]+\\s+\\d+\\s+\\d+\\s+\\S+\\s+\\S+\\s+\\S+\\s+\\S+\\s+(.+)$",
            "contract_output_element_name": "Command",
            "contract_output_element_regex_groups": [
              {
                "regex_group_id": "a7b9de78-3766-4f2b-8482-8e15fbe41c17",
                "regex_group_field": "text",
                "regex_group_index_values": "$1",
                "regex_group_created_at": "2025-07-30T05:56:56.205819Z",
                "regex_group_updated_at": "2025-07-30T05:56:56.205819Z"
              }
            ],
            "contract_output_element_key": "command",
            "contract_output_element_type": "text",
            "contract_output_element_tags": [],
            "contract_output_element_created_at": "2025-07-30T05:56:56Z",
            "contract_output_element_updated_at": "2025-07-30T05:56:56Z"
          }
        ],
        "output_parser_created_at": "2025-07-30T05:56:56.205819Z",
        "output_parser_updated_at": "2025-07-30T05:56:56.205819Z"
      }
    ],
    "payload_created_at": "2025-06-20T09:48:36.121608Z",
    "payload_updated_at": "2025-07-30T05:56:56.205302Z",
    "command_executor": "sh",
    "command_content": "ps aux --no-headers"
  },
  "payload_tags": [],
  "payload_attack_patterns": [
    {
      "attack_pattern_id": "6282476a-f47e-4c81-821f-471a413f78c0",
      "attack_pattern_name": "Process Discovery",
      "attack_pattern_description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
      "attack_pattern_external_id": "T1057",
      "attack_pattern_kill_chain_phases": null
    }
  ],
  "payload_arguments_documents": []
}