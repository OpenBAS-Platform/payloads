id: CVE-2023-20198

info:
  name: Cisco IOS XE Web UI - Command Injection
  author: iamnoooob,rootxharsh,pdresearch,nullenc0de
  severity: critical
  description: |
    A vulnerability in the web UI component of Cisco IOS XE Software could allow an unauthenticated, remote attacker to execute arbitrary commands with root privileges on the underlying operating system. This vulnerability is due to improper input validation in the web UI. An attacker could exploit this vulnerability by sending crafted HTTP requests to an affected device. A successful exploit could allow the attacker to execute arbitrary commands with root privileges on the underlying operating system.
  reference:
    - https://sec.cloudapps.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-iosxe-webui-privesc-j22SaA4z
    - https://www.rapid7.com/blog/post/2023/10/16/etr-cisco-ios-xe-web-ui-cve-2023-20198-active-exploitation/
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2023-20198
    epss-score: 0.94035
    epss-percentile: 0.99886
  metadata:
    max-request: 1
    verified: true
    vendor: cisco
    product: ios_xe
    shodan-query: http.html_hash:1076109428
  tags: cve,cve2023,cisco,rce,router,iot,network,kev



requests:
  - method: POST
    path:
      - "{{BaseURL}}/webui/logoutconfirm.html"
    body: "logon_hash=1"
    headers:
      Content-Type: application/x-www-form-urlencoded
    matchers:
      - type: status
        status:
          - 200
      - type: word
        words:
          - "" # on ne vérifie pas de mot précis, on teste la longueur plus bas
    extractors:
      - type: regex
        name: response_length
        regex:
          - ".*"  # on récupère tout le corps
    condition: and
    matchers-condition: and
    extractors-condition: or
    script:
      # Ici on ne peut pas directement faire un check longueur dans nuclei yaml classique,
      # mais on peut checker par regex sur des tailles connues ou absence de contenu.
      # Sinon on peut simuler avec un matcher regex sur contenu < 32 caractères (exemple):
      - type: regex
        name: suspicious_response
        regex:
          - "^.{1,31}$"   # réponse dont la taille est entre 1 et 31 caractères
