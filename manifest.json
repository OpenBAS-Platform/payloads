[
  {
    "export_version": 1,
    "native_collection": true,
    "payload_information": {
      "payload_type": "Command",
      "payload_name": "Activate Guest Account",
      "payload_description": "The Adversaries can activate the default Guest user. The guest account is inactivated by default\n",
      "payload_platforms": [
        "Windows"
      ],
      "payload_attack_patterns": [
        {
          "attack_pattern_id": "4215bcaa-1c5e-4ea0-b9a1-1fd3ff93fa57",
          "attack_pattern_name": "Default Accounts",
          "attack_pattern_description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS, the root user account in ESXi, and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines; rather, they also include accounts that are preset for equipment such as network devices and computer applications, whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)\n\nDefault accounts may be created on a system after initial setup by connecting or integrating it with another application. For example, when an ESXi server is connected to a vCenter server, a default privileged account called `vpxuser` is created on the ESXi server. If a threat actor is able to compromise this account’s credentials (for example, via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212) on the vCenter host), they will then have access to the ESXi server.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Pentera vCenter Information Disclosure)",
          "attack_pattern_external_id": "T1078.001",
          "attack_pattern_kill_chain_phases": null
        }
      ],
      "payload_cleanup_executor": "cmd",
      "payload_cleanup_command": "net user #{guest_user} /active:no\n",
      "payload_elevation_required": true,
      "payload_arguments": [
        {
          "type": "text",
          "key": "guest_user",
          "default_value": "guest",
          "description": null,
          "separator": null
        }
      ],
      "payload_prerequisites": [],
      "payload_external_id": "8b8ecda8-7cfd-4b3e-9f22-f052c8119106",
      "payload_source": "FILIGRAN",
      "payload_status": "VERIFIED",
      "payload_execution_arch": "ALL_ARCHITECTURES",
      "payload_tags": [],
      "payload_created_at": "2025-06-20T09:47:56.808477Z",
      "payload_updated_at": "2025-06-29T12:34:33.717173Z",
      "payload_output_parsers": [],
      "command_executor": "cmd",
      "command_content": "net user #{guest_user} /active:yes\n"
    },
    "payload_tags": [],
    "payload_attack_patterns": [
      {
        "attack_pattern_id": "4215bcaa-1c5e-4ea0-b9a1-1fd3ff93fa57",
        "attack_pattern_name": "Default Accounts",
        "attack_pattern_description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS, the root user account in ESXi, and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines; rather, they also include accounts that are preset for equipment such as network devices and computer applications, whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)\n\nDefault accounts may be created on a system after initial setup by connecting or integrating it with another application. For example, when an ESXi server is connected to a vCenter server, a default privileged account called `vpxuser` is created on the ESXi server. If a threat actor is able to compromise this account’s credentials (for example, via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212) on the vCenter host), they will then have access to the ESXi server.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Pentera vCenter Information Disclosure)",
        "attack_pattern_external_id": "T1078.001",
        "attack_pattern_kill_chain_phases": null
      }
    ]
  },
  {
    "export_version": 1,
    "native_collection": true,
    "payload_information": {
      "payload_type": "Command",
      "payload_name": "AMSI Bypass - Override AMSI via COM",
      "payload_description": "With administrative rights, an adversary can disable AMSI via registry value in HKCU\\Software\\Classes\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec} by overriding the Microsoft Defender COM object for AMSI and points it to a DLL that does not exist.\nThis is currently being used by AsyncRAT and others. \nhttps://strontic.github.io/xcyclopedia/library/clsid_fdb00e52-a214-4aa1-8fba-4357bb0072ec.html\nhttps://securitynews.sonicwall.com/xmlpost/asyncrat-variant-includes-cryptostealer-capabilites/\n",
      "payload_platforms": [
        "Windows"
      ],
      "payload_attack_patterns": [
        {
          "attack_pattern_id": "f93ec305-4276-455c-89d5-51adb6737cca",
          "attack_pattern_name": "Disable or Modify Tools",
          "attack_pattern_description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) Alternatively, they may add new directories to an endpoint detection and response (EDR) tool’s exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)\n\nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
          "attack_pattern_external_id": "T1562.001",
          "attack_pattern_kill_chain_phases": null
        }
      ],
      "payload_cleanup_executor": "cmd",
      "payload_cleanup_command": "REG DELETE HKCU\\Software\\Classes\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec}\\InProcServer32 /f",
      "payload_elevation_required": true,
      "payload_arguments": [],
      "payload_prerequisites": [],
      "payload_external_id": "ac0de8fe-a821-499c-ba22-591bbe84b06f",
      "payload_source": "FILIGRAN",
      "payload_status": "VERIFIED",
      "payload_execution_arch": "ALL_ARCHITECTURES",
      "payload_tags": [],
      "payload_created_at": "2025-06-28T07:39:47.309677Z",
      "payload_updated_at": "2025-06-28T07:39:47.309677Z",
      "payload_output_parsers": [],
      "command_executor": "cmd",
      "command_content": "REG ADD HKCU\\Software\\Classes\\CLSID\\{fdb00e52-a214-4aa1-8fba-4357bb0072ec}\\InProcServer32 /ve /t REG_SZ /d C:\\IDontExist.dll /f"
    },
    "payload_tags": [],
    "payload_attack_patterns": [
      {
        "attack_pattern_id": "f93ec305-4276-455c-89d5-51adb6737cca",
        "attack_pattern_name": "Disable or Modify Tools",
        "attack_pattern_description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) Alternatively, they may add new directories to an endpoint detection and response (EDR) tool’s exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)\n\nAdversaries may also focus on specific applications such as Sysmon. For example, the “Start” and “Enable” values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
        "attack_pattern_external_id": "T1562.001",
        "attack_pattern_kill_chain_phases": null
      }
    ]
  },
  {
    "export_version": 1,
    "native_collection": true,
    "payload_information": {
      "payload_type": "FileDrop",
      "payload_name": "Drop RedLine Stealer",
      "payload_description": "Drop a recent version of the RedLine Stealer.",
      "payload_platforms": [
        "Windows"
      ],
      "payload_attack_patterns": [
        {
          "attack_pattern_id": "53245640-e41b-49c5-a29d-05cc5188be33",
          "attack_pattern_name": "Browser Information Discovery",
          "attack_pattern_description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
          "attack_pattern_external_id": "T1217",
          "attack_pattern_kill_chain_phases": null
        }
      ],
      "payload_cleanup_executor": null,
      "payload_cleanup_command": null,
      "payload_elevation_required": false,
      "payload_arguments": [],
      "payload_prerequisites": [],
      "payload_external_id": "db574d13-5004-47cd-9bba-1bbd2b3ccb1a",
      "payload_source": "FILIGRAN",
      "payload_status": "VERIFIED",
      "payload_execution_arch": "ALL_ARCHITECTURES",
      "payload_tags": [
        "ca426800-9452-470a-a799-19e9ca64d9a5",
        "9698ff4f-84be-4ecf-ad28-a2d949a2ad2a"
      ],
      "payload_created_at": "2025-06-29T13:09:02.196324Z",
      "payload_updated_at": "2025-06-29T13:09:25.362561Z",
      "payload_output_parsers": [],
      "file_drop_file": "cd524ce4-aa0f-4252-bfa6-b929e7d6a5d3"
    },
    "payload_tags": [
      {
        "tag_id": "ca426800-9452-470a-a799-19e9ca64d9a5",
        "tag_name": "malware",
        "tag_color": "#cf1111"
      },
      {
        "tag_id": "9698ff4f-84be-4ecf-ad28-a2d949a2ad2a",
        "tag_name": "stealer",
        "tag_color": "#8e5dd6"
      },
      {
        "tag_id": "ca426800-9452-470a-a799-19e9ca64d9a5",
        "tag_name": "malware",
        "tag_color": "#cf1111"
      }
    ],
    "payload_document": {
      "document_id": "cd524ce4-aa0f-4252-bfa6-b929e7d6a5d3",
      "document_name": "d10865bd6526c7578c27e6c1d76fd3c6feb3b11fff8e0d0a3b41090a525b8bc1.exe",
      "document_target": "dd1853bf4e3943a02cc0efd8b53baa44.exe",
      "document_description": null,
      "document_tags": [
        "ca426800-9452-470a-a799-19e9ca64d9a5"
      ],
      "document_path": "malware/stealer/windows/Drop RedLine Stealer/attachments.zip"
    },
    "payload_attack_patterns": [
      {
        "attack_pattern_id": "53245640-e41b-49c5-a29d-05cc5188be33",
        "attack_pattern_name": "Browser Information Discovery",
        "attack_pattern_description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
        "attack_pattern_external_id": "T1217",
        "attack_pattern_kill_chain_phases": null
      }
    ]
  }
]